// flex

=flex ($jcontent:start, $aitems:stretch, $wrap:nowrap)
	display: -webkit-flex
	display: -moz-flex
	display: -ms-flex
	display: -o-flex
	display: flex
	justify-content: $jcontent
	align-items: $aitems
	flex-wrap: $wrap

// vertical center
=center
	left: 50%
	top: 50%
	transform: translate(-50%, -50%)
=centerX
	left: 50%
	transform: translate(-50%, 0)
=centerY
	top: 50%
	transform: translate(0, -50%)


=bg-box($h:100%, $w:100%, $t:0, $l:0)
	position: absolute
	top: $t
	left: $l
	width: $w
	height: $h
=bg-pic($position:center)
	position: absolute
	top: 0
	left: 0
	width: 100%
	height: 100%
	object-fit: cover
	object-position: $position

=fillable($height:100vh)
	min-height: $height
	min-height: -webkit-fill-available
	min-height: fill-available

=burger-decor($bold, $color)
		content: ''
		position: absolute
		width: 100%
		height: $bold+px
		background-color: $color
		+smooth

=burger($width, $height, $bold, $color, $breakpoint:767)
	width: $width+px
	height: $height+px
	position: relative
	display: none
	+r($breakpoint)
		display: block

	&__decor, &:before, &:after
		+burger-decor($bold, $color)
	&__decor
		top: 50%
		transform: translateY(-50%)
	&:after
		top: 100%
		transform: translateY(-100%)
	&.active
		.burger
			&__decor
				display: none
		&:before
			top: 50%
			transform: translateY(-50%) rotate(45deg)
		&:after
			top: 50%
			transform: translateY(-50%) rotate(-45deg)




=smooth($delay:.3, $type:ease)
	transition: all $delay+s $type

=overlay($color:#000, $opacity:.5)
	&:after
		content: ''
		background-color: rgba($color, $opacity)
		+bg-box
=gOverlay()
	&:after
		content: ''
		background: linear-gradient(0deg, #00000088 30%, #ffffff44 100%)
		+bg-box

=hidden
	bottom: 0
	clip: rect(0, 0, 0, 0)
	clip-path: inset(50%)
	height: 1px
	margin: -1px
	overflow: hidden
	padding: 0
	position: absolute
	width: 1px
	white-space: nowrap
// clip-path

=clp ($params)
	-webkit-clip-path: $params
	clip-path: $params

// grid

=grid
	display: grid
	display: -ms-grid

=gtc($grid-columns)
    grid-template-columns: $grid-columns
   	-ms-grid-columns: $grid-columns



=gtr($grid-rows)
	-ms-grid-rows: $grid-rows
	grid-template-rows: $grid-rows

// absolute

=absolute($t:auto, $r:auto, $b:auto, $l:auto)
	position: absolute
	top: $t
	right: $r
	bottom: $b
	left: $b


=r($width)
	@media (max-width:$width+'px')
		@content
=rmin($width)
	@media (min-width:$width+'px')
		@content
=portrait()
	@media (orientation: portrait)
		@content
=phone
	@media (max-width: 767px)
		@content
=ratio($val)
	@media (max-aspect-ratio: $val)
		@content


=picInside($mobBreak, $wrapWidth, $wrapPad, $size)
	+rmin($mobBreak)
		flex: 0 0 calc(((100vw - #{$wrapPad} * 2) * #{$size}) + #{$wrapPad})
		transform: translateX(-100%)
	+rmin($wrapWidth)
		flex: 0 0 calc(50vw - (1 - #{$size} - .5) * (#{$wrapWidth}px - #{$wrapPad} * 2))


=fontAdapt($fontSize, $minFont, $mockWidth, $minWidth)
	font-size: calc(#{$minFont}px + ((#{$fontSize} - #{$minFont}) * (100vw / #{$mockWidth})))
	+phone
		font-size: calc(#{$minFont}px + ((#{$fontSize} - #{$minFont} * .7) * ((100vw - #{$minWidth}px) / #{$mockWidth})))

//px to em

$browser-context: 16

@function em( $pixels, $context: $browser-context)
	@return #{$pixels/$context}em



=header-menu($top:0)
	position: fixed
	top: $top+px
	left: 0
	right: 0
	bottom: 0
	padding: 10px 20px 20px
	transition: left .3s ease